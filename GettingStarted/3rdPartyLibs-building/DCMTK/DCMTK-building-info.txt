THIS ONE WORKS WITH MINOR ADJUSTMENTS
(e.g. #undef rand_r)
WHEN BUILT WITH CMAKE from the command line

dowload dmctk (it is important to get this exact version)
ftp://dicom.offis.de/pub/dicom/offis/software/dcmtk/snapshot/old/dcmtk-3.6.1_20121102.tar.gz


i got this error:
e:/3rdParty/dcmtk-3.6.1_20121102/ofstd/include/dcmtk/ofstd/ofstd.h:651:23: error: expected unqualified-id before 'unsign
ed'
     static int rand_r(unsigned int &seed);
                       ^
e:/3rdParty/dcmtk-3.6.1_20121102/ofstd/include/dcmtk/ofstd/ofstd.h:651:23: error: expected ')' before 'unsigned'
make[2]: *** [ofstd/libsrc/CMakeFiles/ofstd.dir/ofchrenc.cc.obj] Error 1
==>
http://forum.dcmtk.org/viewtopic.php?f=1&t=3838

so "minimize" the PATH env var...

in msys:


$ PATH=.:/usr/local/bin:/mingw/bin:/bin:/c/Windows/System32:"/c/Program Files/CMake 2.8/bin":/e/TDM-GCC-32/bin

peter@peter-PC /e
$ mkdir dcmtk-3.6.1_20121102-cmake-build

peter@peter-PC /e
$ cd dcmtk-3.6.1_20121102-cmake-build

in E:\3rdParty\dcmtk-3.6.1_20121102\oflog\include\dcmtk\oflog\config\win32.h
/* This used to be _MSC_VER >= 1400, but MSVC 2005 is broken */
#if (defined (_MSC_VER) && _MSC_VER > 1400) || defined (__MINGW32__)
//#  define DCMTK_LOG4CPLUS_HAVE_INTRIN_H // HUSKY HACK - does not work in TDM-GCC 32bit
#endif

-----------------------------------
!! NOPE - not done, not tested, but could work along these lines !!
!! how to set release build config? !!
configure (GNU automake)

NOTE: you may want to perform the lib-copy step beforehand
thus the pathes given below have to be adjusted accordingly

attention - in newer versions it's "--with-zlibinc"

./configure 	--prefix=/e/3rdParty-build/dcmtk-3.6.1_20121102 \
				--with-zlib \
				--disable-debug \
				--disable-threads \
				--with-libzlibinc=/e/3rdParty-build/DCMTK-external/zlib-1.2.8 \
                --with-libtiffinc=/e/3rdParty-build/DCMTK-external/tiff-3.9.7 \
                --with-libpnginc=/e/3rdParty-build/DCMTK-external/libpng-1.4.12 \
                --with-libxmlinc=/e/3rdParty-build/DCMTK-external/libxml2-2.9.1 \
				--with-libiconvinc=/e/3rdParty-build/DCMTK-external/libiconv-1.14 

------------------------------------
PREFERRED METHOD:
Cmake cmd line

* lib-copy step:
go to E:\3rdParty-build
create a new directory "DCMTK-external"
copy the png, iconv, xml, tiff and zlib folders to DCMTK-external
we do this because DCMTK assumes specific file names for the libs
to distinguish between release- and debug-builds of the corresponding libs
in order to not mess up the original directories
( alternatively just perform these steps "in-place" - 
  create the respective copy and rename it, so that the 
  standard lib is still found under its original name )

  
in the respective lib directories:
libiconv.a ==> iconv_o.lib
libiconv.a ==> libiconv_o.lib
libcharset.a ==> libchset_o.lib
libxml2.dll.a ==> libxml2_o.lib
libpng.a ==> libpng_o.lib
libtiff.a ==> libtiff_o.lib
libz.a ==> zlib_o.lib

AND:
move the xml include directory 
include/libxml2/libxml 
to 
include/libxml 
and remove the then empty 
include/libxml2 
directory
!!!

i put these steps into a short shell script:
just run
dcmtkLibRenames.sh


peter@peter-PC /e/dcmtk-3.6.1_20121102-cmake-build
$ ./runCmakeDCMTK.sh /e/3rdParty/dcmtk-3.6.1_20121102

(you might need to make it executable beforehand:
peter@peter-PC /e/dcmtk-3.6.1_20121102-cmake-build
$ chmod +x runCmakeDCMTK.sh


NOTE: i got errors about missing zlib.h =>
it seems that in order to fix that, do not set it to the include folder
inside the zlib-installation folder but rather to zlib's root folder
(one folder 'before/above' the include folder; zlib's root folder thus contains
the include and the lib folder when listing directory contents)

e.g. from DCMTK's install instructions in file INSTALL:
" For example, in order to turn on libxml2 support, set the value of variable
  "DCMTK_WITH_XML" to "ON" and set the value of variable "WITH_LIBXMLINC"
  to the path where the include files and libraries of libxml2 can be found,
  e.g. "C:\libxml2-2.7.7". "

  
   (Please note that the include files of all external libraries are always
   expected in a directory named "include" below the directory which is
   specified in "WITH_LIBXMLINC", "WITH_LIBPNGINC", "WITH_LIBTIFFINC",
   "WITH_OPENSSLINC", or "WITH_ZLIBINC").

   (Please note also that the library files of all external libraries are
   always expected in directory named "lib" below the directory which is
   specified in "WITH_LIBXMLINC", "WITH_LIBPNGINC", "WITH_LIBTIFFINC",
   "WITH_OPENSSLINC", or "WITH_ZLIBINC".  Moreover, note that the following
   filenames must be used for the corresponding lib files:

     libxml2:
       "iconv_d.lib"    - debug version
       "iconv_o.lib"    - release version (optimized)
       "libxml2_d.lib"  - debug version
       "libxml2_o.lib"  - release version (optimized)

     libpng:
       "libpng_d.lib"   - debug version
       "libpng_o.lib"   - release version (optimized)

     libtiff:
       "libtiff_d.lib"  - debug version
       "libtiff_o.lib"  - release version (optimized)

     openssl:
       "libeay32_d.lib" - debug version
       "libeay32_o.lib" - release version (optimized)
       "ssleay32_d.lib" - debug version
       "ssleay32_o.lib" - release version (optimized)

     zlib:
       "zlib_d.lib"     - debug version
       "zlib_o.lib"     - release version (optimized)

   

peter@peter-PC /e/dcmtk-3.6.1_20121102-cmake-build
$ make

peter@peter-PC /e/dcmtk-3.6.1_20121102-cmake-build
$ make install

---------------
or use CMAKE gui:

peter@peter-PC /e/dcmtk-3.6.1_20121102-cmake-build
$ cmake-gui /e/3rdParty/dcmtk-3.6.1_20121102/

in cmake gui, click "Configure"
choose "MSYS Makefiles" and "Use default native compilers"

set the corresponding values
note:
only after enabling DCMTK_WIHT_<lib-name>
and clicking Configure again
may you specify the corresponding include directories
NOTE: actually set them to the include-directories' parent folder!

e.g. from DCMTK's install instructions in file INSTALL:
" For example, in order to turn on libxml2 support, set the value of variable
  "DCMTK_WITH_XML" to "ON" and set the value of variable "WITH_LIBXMLINC"
  to the path where the include files and libraries of libxml2 can be found,
  e.g. "C:\libxml2-2.7.7". "
