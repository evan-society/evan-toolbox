.TH "ew::View3Image" 3 "4.20100927" "EW Library" "EW Library"
.ad l
.nh
.SH NAME
ew::View3Image \- 
.PP
Image Item.  

\fBew::View3Image\fP is an \fBew::View3Widget\fP item to display a ew::DataflowImage3, a raster image projected onto an array of points.
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <ew/View3Image.h>\fP
.PP
Inherits \fBew::View3Item\fP.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBView3Image\fP (\fBew::View3Widget\fP *\fBview\fP, int i_type=0)"
.br
.ti -1c
.RI "void \fBset_image\fP (const ew::DataflowImage3 *im)"
.br
.ti -1c
.RI "const ew::DataflowImage3 * \fBget_image\fP () const "
.br
.ti -1c
.RI "void \fBset_color\fP (const unsigned char *rgb)"
.br
.ti -1c
.RI "const unsigned char * \fBget_color\fP () const "
.br
.in -1c
.SH DESCRIPTION
.PP 
.PP
\fBew::View3Image\fP is a class without assignment or comparison. There are private member variables.
.PP
This is barely implemented, and currently just displays a solid rectangle, on a 2x2x1 rectangular array of points.
.PP
The default colour is [128, 128, 128]. 
.SH CONSTRUCTORS AND DESCTRUCTORS
.PP 
.SS "ew::View3Image::View3Image (\fBew::View3Widget\fP * view, int i_type = \fC0\fP)\fC [explicit]\fP"This creates an item. 
.PP
\fBParameters:\fP
.RS 4
\fIview\fP The view widget the item should belong to. 
.br
\fIi_type\fP The initializer for \fBew::View3Item::type\fP. 
.RE
.PP

.SH MEMBER FUNCTIONS
.PP 
.SS "void ew::View3Image::set_image (const ew::DataflowImage3 * im)"\fBParameters:\fP
.RS 4
\fIim\fP A pointer to the new image node to display, or 0. 
.RE
.PP

.SS "const ew::DataflowImage3 * ew::View3Image::get_image () const\fC [inline]\fP"\fBReturns:\fP
.RS 4
A pointer to the current image node being displayed, or 0. 
.RE
.PP

.SS "void ew::View3Image::set_color (const unsigned char * rgb)"\fBParameters:\fP
.RS 4
\fIrgb\fP This points to an array of size 3 containing the new colour for the image. 
.RE
.PP

.SS "const unsigned char * ew::View3Image::get_color () const\fC [inline]\fP"\fBReturns:\fP
.RS 4
A pointer to the current colour for the image. 
.RE
.PP


