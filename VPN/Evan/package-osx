#!/bin/sh

# get rid of old folders if they exist
rm -R osx-dist

# make the dist-folder and copy the basic app structure
mkdir osx-dist > /dev/null 2>&1
cp -a Evan.app osx-dist
cd osx-dist

# paths
OPTDIR="/opt/local/lib"
LIBDIR="Evan.app/Contents/Libraries"
EXENAM="Evan.app/Contents/MacOS/Evan"
RESDIR="Evan.app/Contents/Resources"

# generate directory structure
mkdir "$LIBDIR"
mkdir "$LIBDIR/gcc44"
mkdir "$RESDIR/Nodes"
mkdir "$RESDIR/Shaders"

# resources
cp -a /opt/local/lib/Resources/* "$RESDIR/"
cp ../Nodes/Nodes*xml "$RESDIR/Nodes/"
cp ../Shaders/* "$RESDIR/Shaders/"
cp ../Images/evan-icon.icns "$RESDIR/Evan.icns"

# additional libraries - not found via otool, obtained from analyzing a running evan process
cp -a /opt/local/lib/osgPlugins-* "$LIBDIR/"
cp -a /opt/local/share/qt4/plugins/imageformats/* "$LIBDIR/"
cp -a /opt/local/lib/libjpeg.8.dylib /opt/local/lib/libmng.1.dylib /opt/local/lib/libz.1.2.5.dylib /opt/local/lib/liblcms.1.0.19.dylib /opt/local/lib/libtiff.3.dylib "$LIBDIR/"

# make it pretty (icon and title)
/usr/libexec/PlistBuddy -c "Set CFBundleIconFile Evan" "$RESDIR/../Info.plist"
/usr/libexec/PlistBuddy -c "Add CFBundleName string Evan" "$RESDIR/../Info.plist"
/usr/libexec/PlistBuddy -c "Add CFBundleShortVersionString string 4.2" "$RESDIR/../Info.plist"
/usr/libexec/PlistBuddy -c "Add CFBundleVersion string 4.2" "$RESDIR/../Info.plist"

# library relocation
function relocate {
	echo "Relocating $1"
	LL=/tmp/liblist.$RANDOM
	otool -L "$1" > $LL
	fgrep $OPTDIR < $LL | cut -b 17- | cut -d ' ' -f 1 | while read a; do
		if [ -e "/usr/lib/$a" ]; then
			echo "Systemlib: $a";
		elif ! [ -e "$LIBDIR/$a" ]; then
			cp "$OPTDIR/$a" "$LIBDIR/$a"
			relocate "$LIBDIR/$a";
		fi;
		install_name_tool -change "$OPTDIR/$a" "@executable_path/../Libraries/$a" "$1";
	done;
	rm $LL;
}

# relocate already placed libs and their dependencies
for a in $LIBDIR/*dylib; do
	relocate "$a";
done;

# relocate executable and it's dependencies
relocate "$EXENAM"
mv "$EXENAM" "${EXENAM}.bin"

# create shell script to run evan toolbox
cat > "$EXENAM" <<"EOF"
#!/bin/bash
cd "`dirname "$0"`"
cd ..
if ! test -e license.dat; then
	touch license.dat
	chmod 666 license.dat;
fi;
P="$(pwd)"
export DYLD_LIBRARY_PATH="$P/Libraries"
export EVAN_LIB="$P/Resources"
export EVAN_LICENSE="$P/license.dat"
BIN="$P/MacOS/Evan.bin"
cd
exec $BIN
EOF

chmod +x "$EXENAM"

# make a dmg installer
hdiutil create -megabytes 80 -layout None -fs "HFS+" "tmp_toolbox.dmg" -volname "EVAN Toolbox Installation"
hdiutil mount 'tmp_toolbox.dmg' > tmp
DISK=$(cut -f 1 < tmp)
MOUNT="$(echo $(cut -f 2- < tmp))"
echo "Disk is: $DISK - Mountpoint is: $MOUNT"
cp -a Evan.app/ "$MOUNT/Evan.app";
mkdir "$MOUNT/.background"
cp ../osx-install.png "$MOUNT/.background/"
open "$MOUNT"

# use some apple script to layout this thing
echo '
   tell application "Finder"
     tell disk "EVAN Toolbox Installation"
           open
           set current view of container window to icon view
           set toolbar visible of container window to false
           set statusbar visible of container window to false
           set the bounds of container window to {100, 100, 670, 550}
           set theViewOptions to the icon view options of container window
           set arrangement of theViewOptions to not arranged
           set icon size of theViewOptions to 72
           set background picture of theViewOptions to file ".background:osx-install.png"
           make new alias file at container window to POSIX file "/Applications" with properties {name:"Applications"}
           set position of item "Evan.app" of container window to {95, 310}
           set position of item "Evan" of container window to {95, 310}
           set position of item "Applications" of container window to {440, 310}
           close
           open
           update without registering applications
           delay 3
     end tell
   end tell
' | osascript
sleep 1
hdiutil eject $DISK

# finally, compress the dmg
hdiutil convert "tmp_toolbox.dmg" -format UDZO -imagekey zlib-level=9 -o "EvanToolbox.dmg"